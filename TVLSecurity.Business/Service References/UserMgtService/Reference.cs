//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TVLSecurity.Business.UserMgtService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserMgtService.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertUserData", ReplyAction="http://tempuri.org/IUserManagementService/InsertUserDataResponse")]
        int InsertUserData(Entity.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserData", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserDataResponse")]
        void DeleteUserData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserData", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserDataResponse")]
        int UpdateUserData(Entity.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertUserRoles", ReplyAction="http://tempuri.org/IUserManagementService/InsertUserRolesResponse")]
        int InsertUserRoles(int userId, System.Collections.Generic.List<Entity.Role> roleList, int applicationId, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserList", ReplyAction="http://tempuri.org/IUserManagementService/GetUserListResponse")]
        System.Collections.Generic.List<Entity.User> GetUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserListByCraiteria", ReplyAction="http://tempuri.org/IUserManagementService/GetUserListByCraiteriaResponse")]
        System.Collections.Generic.List<Entity.User> GetUserListByCraiteria(Entity.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserRole", ReplyAction="http://tempuri.org/IUserManagementService/GetUserRoleResponse")]
        System.Collections.Generic.List<Entity.UserRoleInfo> GetUserRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUser", ReplyAction="http://tempuri.org/IUserManagementService/GetUserResponse")]
        Entity.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserByLoginId", ReplyAction="http://tempuri.org/IUserManagementService/GetUserByLoginIdResponse")]
        Entity.User GetUserByLoginId(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateGroup", ReplyAction="http://tempuri.org/IUserManagementService/CreateGroupResponse")]
        int CreateGroup(Entity.UserGroup item, System.Collections.Generic.List<Entity.Role> roleList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateGroup", ReplyAction="http://tempuri.org/IUserManagementService/UpdateGroupResponse")]
        int UpdateGroup(Entity.UserGroup item, System.Collections.Generic.List<Entity.Role> roleList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteGroup", ReplyAction="http://tempuri.org/IUserManagementService/DeleteGroupResponse")]
        int DeleteGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetGroupList", ReplyAction="http://tempuri.org/IUserManagementService/GetGroupListResponse")]
        System.Collections.Generic.List<Entity.UserGroup> GetGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetGroupById", ReplyAction="http://tempuri.org/IUserManagementService/GetGroupByIdResponse")]
        Entity.UserGroup GetGroupById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRolesList", ReplyAction="http://tempuri.org/IUserManagementService/GetRolesListResponse")]
        System.Collections.Generic.List<Entity.Role> GetRolesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRolesListByCraiteria", ReplyAction="http://tempuri.org/IUserManagementService/GetRolesListByCraiteriaResponse")]
        System.Collections.Generic.List<Entity.Role> GetRolesListByCraiteria(Entity.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRoleGroups", ReplyAction="http://tempuri.org/IUserManagementService/GetRoleGroupsResponse")]
        System.Collections.Generic.List<Entity.RoleGroup> GetRoleGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRolesListByUser", ReplyAction="http://tempuri.org/IUserManagementService/GetRolesListByUserResponse")]
        System.Collections.Generic.List<Entity.Role> GetRolesListByUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRolesListByUserGroup", ReplyAction="http://tempuri.org/IUserManagementService/GetRolesListByUserGroupResponse")]
        System.Collections.Generic.List<Entity.Role> GetRolesListByUserGroup(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertRolesMenusRight", ReplyAction="http://tempuri.org/IUserManagementService/InsertRolesMenusRightResponse")]
        int InsertRolesMenusRight(Entity.Role role, System.Collections.Generic.List<Entity.Menu> menuList, System.Collections.Generic.List<Entity.Right> rightList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateRolesMenusRight", ReplyAction="http://tempuri.org/IUserManagementService/UpdateRolesMenusRightResponse")]
        int UpdateRolesMenusRight(Entity.Role role, System.Collections.Generic.List<Entity.Menu> menuList, System.Collections.Generic.List<Entity.Right> rightList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRoleById", ReplyAction="http://tempuri.org/IUserManagementService/GetRoleByIdResponse")]
        Entity.Role GetRoleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/CreateRoleGroup", ReplyAction="http://tempuri.org/IUserManagementService/CreateRoleGroupResponse")]
        int CreateRoleGroup(Entity.RoleGroup item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateRoleGroup", ReplyAction="http://tempuri.org/IUserManagementService/UpdateRoleGroupResponse")]
        int UpdateRoleGroup(Entity.RoleGroup item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteRoleGroup", ReplyAction="http://tempuri.org/IUserManagementService/DeleteRoleGroupResponse")]
        int DeleteRoleGroup(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRoleGroupById", ReplyAction="http://tempuri.org/IUserManagementService/GetRoleGroupByIdResponse")]
        Entity.RoleGroup GetRoleGroupById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertMenuData", ReplyAction="http://tempuri.org/IUserManagementService/InsertMenuDataResponse")]
        int InsertMenuData(Entity.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateMenuData", ReplyAction="http://tempuri.org/IUserManagementService/UpdateMenuDataResponse")]
        int UpdateMenuData(Entity.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteMenuData", ReplyAction="http://tempuri.org/IUserManagementService/DeleteMenuDataResponse")]
        int DeleteMenuData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllMenus", ReplyAction="http://tempuri.org/IUserManagementService/GetAllMenusResponse")]
        System.Collections.Generic.List<Entity.Menu> GetAllMenus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenusByParent", ReplyAction="http://tempuri.org/IUserManagementService/GetMenusByParentResponse")]
        System.Collections.Generic.List<Entity.Menu> GetMenusByParent(int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenuListByRoleId", ReplyAction="http://tempuri.org/IUserManagementService/GetMenuListByRoleIdResponse")]
        System.Collections.Generic.List<Entity.Menu> GetMenuListByRoleId(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetParentMenuListByLoginId", ReplyAction="http://tempuri.org/IUserManagementService/GetParentMenuListByLoginIdResponse")]
        System.Collections.Generic.List<Entity.Menu> GetParentMenuListByLoginId(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetChildMenuListByLoginAndParentId", ReplyAction="http://tempuri.org/IUserManagementService/GetChildMenuListByLoginAndParentIdRespo" +
            "nse")]
        System.Collections.Generic.List<Entity.Menu> GetChildMenuListByLoginAndParentId(string loginId, int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenuByMenuNameAndLoginId", ReplyAction="http://tempuri.org/IUserManagementService/GetMenuByMenuNameAndLoginIdResponse")]
        Entity.Menu GetMenuByMenuNameAndLoginId(string loginId, string MenuName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenuByMenuName", ReplyAction="http://tempuri.org/IUserManagementService/GetMenuByMenuNameResponse")]
        Entity.Menu GetMenuByMenuName(string MenuName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenusByApplicationAndModuleId", ReplyAction="http://tempuri.org/IUserManagementService/GetMenusByApplicationAndModuleIdRespons" +
            "e")]
        System.Collections.Generic.List<Entity.Menu> GetMenusByApplicationAndModuleId(int roleId, int applicationId, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenusByApplicationAndModuleName", ReplyAction="http://tempuri.org/IUserManagementService/GetMenusByApplicationAndModuleNameRespo" +
            "nse")]
        System.Collections.Generic.List<Entity.Menu> GetMenusByApplicationAndModuleName(string appName, string modName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenuByMenuId", ReplyAction="http://tempuri.org/IUserManagementService/GetMenuByMenuIdResponse")]
        Entity.Menu GetMenuByMenuId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetMenus", ReplyAction="http://tempuri.org/IUserManagementService/GetMenusResponse")]
        System.Collections.Generic.List<Entity.Menu> GetMenus(string loginId, string appName, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetParentMenus", ReplyAction="http://tempuri.org/IUserManagementService/GetParentMenusResponse")]
        System.Collections.Generic.List<Entity.Menu> GetParentMenus(int ModuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllRights", ReplyAction="http://tempuri.org/IUserManagementService/GetAllRightsResponse")]
        System.Collections.Generic.List<Entity.Right> GetAllRights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllRightsMapedByRole", ReplyAction="http://tempuri.org/IUserManagementService/GetAllRightsMapedByRoleResponse")]
        System.Collections.Generic.List<Entity.Right> GetAllRightsMapedByRole(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRightByLoginIdAndRightName", ReplyAction="http://tempuri.org/IUserManagementService/GetRightByLoginIdAndRightNameResponse")]
        Entity.Right GetRightByLoginIdAndRightName(string loginId, string rightName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetRightsByRoleAndAppAndModule", ReplyAction="http://tempuri.org/IUserManagementService/GetRightsByRoleAndAppAndModuleResponse")]
        System.Collections.Generic.List<Entity.Right> GetRightsByRoleAndAppAndModule(int roleId, int appId, int moduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ValidateUser", ReplyAction="http://tempuri.org/IUserManagementService/ValidateUserResponse")]
        bool ValidateUser(string userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllDepartment", ReplyAction="http://tempuri.org/IUserManagementService/GetAllDepartmentResponse")]
        System.Collections.Generic.List<Entity.Department> GetAllDepartment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetZoneList", ReplyAction="http://tempuri.org/IUserManagementService/GetZoneListResponse")]
        System.Collections.Generic.List<Entity.Zone> GetZoneList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertEmpZone", ReplyAction="http://tempuri.org/IUserManagementService/InsertEmpZoneResponse")]
        int InsertEmpZone(string EmpId, System.Collections.Generic.List<Entity.Zone> roleList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/LoadZoneListByEmpID", ReplyAction="http://tempuri.org/IUserManagementService/LoadZoneListByEmpIDResponse")]
        System.Collections.Generic.List<Entity.Zone> LoadZoneListByEmpID(string empId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetEmployeesByApplicationId", ReplyAction="http://tempuri.org/IUserManagementService/GetEmployeesByApplicationIdResponse")]
        System.Collections.Generic.List<Entity.Employee> GetEmployeesByApplicationId(int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllEmployee", ReplyAction="http://tempuri.org/IUserManagementService/GetAllEmployeeResponse")]
        System.Collections.Generic.List<Entity.Employee> GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllEmployeeWithPaging", ReplyAction="http://tempuri.org/IUserManagementService/GetAllEmployeeWithPagingResponse")]
        System.Collections.Generic.List<Entity.Employee> GetAllEmployeeWithPaging(int startRowIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetSearchEmployeeWithPaging", ReplyAction="http://tempuri.org/IUserManagementService/GetSearchEmployeeWithPagingResponse")]
        System.Collections.Generic.List<Entity.Employee> GetSearchEmployeeWithPaging(out int intTotalRows, Entity.Employee obj, int startRowIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetTotalEmployeeCount", ReplyAction="http://tempuri.org/IUserManagementService/GetTotalEmployeeCountResponse")]
        int GetTotalEmployeeCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllApplications", ReplyAction="http://tempuri.org/IUserManagementService/GetAllApplicationsResponse")]
        System.Collections.Generic.List<Entity.Application> GetAllApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetApplicationById", ReplyAction="http://tempuri.org/IUserManagementService/GetApplicationByIdResponse")]
        Entity.Application GetApplicationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertApplicationData", ReplyAction="http://tempuri.org/IUserManagementService/InsertApplicationDataResponse")]
        int InsertApplicationData(Entity.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateApplicationData", ReplyAction="http://tempuri.org/IUserManagementService/UpdateApplicationDataResponse")]
        int UpdateApplicationData(Entity.Application app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteApplicationData", ReplyAction="http://tempuri.org/IUserManagementService/DeleteApplicationDataResponse")]
        int DeleteApplicationData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllModules", ReplyAction="http://tempuri.org/IUserManagementService/GetAllModulesResponse")]
        System.Collections.Generic.List<Entity.Module> GetAllModules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetModulesByApplicationId", ReplyAction="http://tempuri.org/IUserManagementService/GetModulesByApplicationIdResponse")]
        System.Collections.Generic.List<Entity.Module> GetModulesByApplicationId(int appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetModuleById", ReplyAction="http://tempuri.org/IUserManagementService/GetModuleByIdResponse")]
        Entity.Module GetModuleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertModuleData", ReplyAction="http://tempuri.org/IUserManagementService/InsertModuleDataResponse")]
        int InsertModuleData(Entity.Module module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateModuleData", ReplyAction="http://tempuri.org/IUserManagementService/UpdateModuleDataResponse")]
        int UpdateModuleData(Entity.Module module);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteModuleData", ReplyAction="http://tempuri.org/IUserManagementService/DeleteModuleDataResponse")]
        int DeleteModuleData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetZoneWiseUserList", ReplyAction="http://tempuri.org/IUserManagementService/GetZoneWiseUserListResponse")]
        System.Collections.Generic.List<Entity.Dashboard> GetZoneWiseUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/InsertUserMenus", ReplyAction="http://tempuri.org/IUserManagementService/InsertUserMenusResponse")]
        int InsertUserMenus(Entity.UserMenu userMenu, System.Collections.Generic.List<Entity.Menu> menuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserMenus", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserMenusResponse")]
        int UpdateUserMenus(Entity.UserMenu userMenu, System.Collections.Generic.List<Entity.Menu> menuList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/LoadUserMenuList", ReplyAction="http://tempuri.org/IUserManagementService/LoadUserMenuListResponse")]
        System.Collections.Generic.List<Entity.Menu> LoadUserMenuList(Entity.UserMenu userMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllUserMenuList", ReplyAction="http://tempuri.org/IUserManagementService/GetAllUserMenuListResponse")]
        System.Collections.Generic.List<Entity.UserMenu> GetAllUserMenuList(Entity.UserMenu item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : TVLSecurity.Business.UserMgtService.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<TVLSecurity.Business.UserMgtService.IUserManagementService>, TVLSecurity.Business.UserMgtService.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertUserData(Entity.User user) {
            return base.Channel.InsertUserData(user);
        }
        
        public void DeleteUserData(int id) {
            base.Channel.DeleteUserData(id);
        }
        
        public int UpdateUserData(Entity.User user) {
            return base.Channel.UpdateUserData(user);
        }
        
        public int InsertUserRoles(int userId, System.Collections.Generic.List<Entity.Role> roleList, int applicationId, int moduleId) {
            return base.Channel.InsertUserRoles(userId, roleList, applicationId, moduleId);
        }
        
        public System.Collections.Generic.List<Entity.User> GetUserList() {
            return base.Channel.GetUserList();
        }
        
        public System.Collections.Generic.List<Entity.User> GetUserListByCraiteria(Entity.User user) {
            return base.Channel.GetUserListByCraiteria(user);
        }
        
        public System.Collections.Generic.List<Entity.UserRoleInfo> GetUserRole(int id) {
            return base.Channel.GetUserRole(id);
        }
        
        public Entity.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public Entity.User GetUserByLoginId(string loginId) {
            return base.Channel.GetUserByLoginId(loginId);
        }
        
        public int CreateGroup(Entity.UserGroup item, System.Collections.Generic.List<Entity.Role> roleList) {
            return base.Channel.CreateGroup(item, roleList);
        }
        
        public int UpdateGroup(Entity.UserGroup item, System.Collections.Generic.List<Entity.Role> roleList) {
            return base.Channel.UpdateGroup(item, roleList);
        }
        
        public int DeleteGroup(int id) {
            return base.Channel.DeleteGroup(id);
        }
        
        public System.Collections.Generic.List<Entity.UserGroup> GetGroupList() {
            return base.Channel.GetGroupList();
        }
        
        public Entity.UserGroup GetGroupById(int id) {
            return base.Channel.GetGroupById(id);
        }
        
        public System.Collections.Generic.List<Entity.Role> GetRolesList() {
            return base.Channel.GetRolesList();
        }
        
        public System.Collections.Generic.List<Entity.Role> GetRolesListByCraiteria(Entity.Role role) {
            return base.Channel.GetRolesListByCraiteria(role);
        }
        
        public System.Collections.Generic.List<Entity.RoleGroup> GetRoleGroups() {
            return base.Channel.GetRoleGroups();
        }
        
        public System.Collections.Generic.List<Entity.Role> GetRolesListByUser(int userId) {
            return base.Channel.GetRolesListByUser(userId);
        }
        
        public System.Collections.Generic.List<Entity.Role> GetRolesListByUserGroup(int groupId) {
            return base.Channel.GetRolesListByUserGroup(groupId);
        }
        
        public int InsertRolesMenusRight(Entity.Role role, System.Collections.Generic.List<Entity.Menu> menuList, System.Collections.Generic.List<Entity.Right> rightList) {
            return base.Channel.InsertRolesMenusRight(role, menuList, rightList);
        }
        
        public int UpdateRolesMenusRight(Entity.Role role, System.Collections.Generic.List<Entity.Menu> menuList, System.Collections.Generic.List<Entity.Right> rightList) {
            return base.Channel.UpdateRolesMenusRight(role, menuList, rightList);
        }
        
        public Entity.Role GetRoleById(int id) {
            return base.Channel.GetRoleById(id);
        }
        
        public int CreateRoleGroup(Entity.RoleGroup item) {
            return base.Channel.CreateRoleGroup(item);
        }
        
        public int UpdateRoleGroup(Entity.RoleGroup item) {
            return base.Channel.UpdateRoleGroup(item);
        }
        
        public int DeleteRoleGroup(int Id) {
            return base.Channel.DeleteRoleGroup(Id);
        }
        
        public Entity.RoleGroup GetRoleGroupById(int id) {
            return base.Channel.GetRoleGroupById(id);
        }
        
        public int InsertMenuData(Entity.Menu menu) {
            return base.Channel.InsertMenuData(menu);
        }
        
        public int UpdateMenuData(Entity.Menu menu) {
            return base.Channel.UpdateMenuData(menu);
        }
        
        public int DeleteMenuData(int id) {
            return base.Channel.DeleteMenuData(id);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetAllMenus() {
            return base.Channel.GetAllMenus();
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetMenusByParent(int parentId) {
            return base.Channel.GetMenusByParent(parentId);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetMenuListByRoleId(int roleId) {
            return base.Channel.GetMenuListByRoleId(roleId);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetParentMenuListByLoginId(string loginId) {
            return base.Channel.GetParentMenuListByLoginId(loginId);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetChildMenuListByLoginAndParentId(string loginId, int parentId) {
            return base.Channel.GetChildMenuListByLoginAndParentId(loginId, parentId);
        }
        
        public Entity.Menu GetMenuByMenuNameAndLoginId(string loginId, string MenuName) {
            return base.Channel.GetMenuByMenuNameAndLoginId(loginId, MenuName);
        }
        
        public Entity.Menu GetMenuByMenuName(string MenuName) {
            return base.Channel.GetMenuByMenuName(MenuName);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetMenusByApplicationAndModuleId(int roleId, int applicationId, int moduleId) {
            return base.Channel.GetMenusByApplicationAndModuleId(roleId, applicationId, moduleId);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetMenusByApplicationAndModuleName(string appName, string modName) {
            return base.Channel.GetMenusByApplicationAndModuleName(appName, modName);
        }
        
        public Entity.Menu GetMenuByMenuId(int id) {
            return base.Channel.GetMenuByMenuId(id);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetMenus(string loginId, string appName, string moduleName) {
            return base.Channel.GetMenus(loginId, appName, moduleName);
        }
        
        public System.Collections.Generic.List<Entity.Menu> GetParentMenus(int ModuleId) {
            return base.Channel.GetParentMenus(ModuleId);
        }
        
        public System.Collections.Generic.List<Entity.Right> GetAllRights() {
            return base.Channel.GetAllRights();
        }
        
        public System.Collections.Generic.List<Entity.Right> GetAllRightsMapedByRole(int roleId) {
            return base.Channel.GetAllRightsMapedByRole(roleId);
        }
        
        public Entity.Right GetRightByLoginIdAndRightName(string loginId, string rightName) {
            return base.Channel.GetRightByLoginIdAndRightName(loginId, rightName);
        }
        
        public System.Collections.Generic.List<Entity.Right> GetRightsByRoleAndAppAndModule(int roleId, int appId, int moduleId) {
            return base.Channel.GetRightsByRoleAndAppAndModule(roleId, appId, moduleId);
        }
        
        public bool ValidateUser(string userId, string password) {
            return base.Channel.ValidateUser(userId, password);
        }
        
        public System.Collections.Generic.List<Entity.Department> GetAllDepartment() {
            return base.Channel.GetAllDepartment();
        }
        
        public System.Collections.Generic.List<Entity.Zone> GetZoneList() {
            return base.Channel.GetZoneList();
        }
        
        public int InsertEmpZone(string EmpId, System.Collections.Generic.List<Entity.Zone> roleList) {
            return base.Channel.InsertEmpZone(EmpId, roleList);
        }
        
        public System.Collections.Generic.List<Entity.Zone> LoadZoneListByEmpID(string empId) {
            return base.Channel.LoadZoneListByEmpID(empId);
        }
        
        public System.Collections.Generic.List<Entity.Employee> GetEmployeesByApplicationId(int applicationId) {
            return base.Channel.GetEmployeesByApplicationId(applicationId);
        }
        
        public System.Collections.Generic.List<Entity.Employee> GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Collections.Generic.List<Entity.Employee> GetAllEmployeeWithPaging(int startRowIndex, int maxRows) {
            return base.Channel.GetAllEmployeeWithPaging(startRowIndex, maxRows);
        }
        
        public System.Collections.Generic.List<Entity.Employee> GetSearchEmployeeWithPaging(out int intTotalRows, Entity.Employee obj, int startRowIndex, int maxRows) {
            return base.Channel.GetSearchEmployeeWithPaging(out intTotalRows, obj, startRowIndex, maxRows);
        }
        
        public int GetTotalEmployeeCount() {
            return base.Channel.GetTotalEmployeeCount();
        }
        
        public System.Collections.Generic.List<Entity.Application> GetAllApplications() {
            return base.Channel.GetAllApplications();
        }
        
        public Entity.Application GetApplicationById(int id) {
            return base.Channel.GetApplicationById(id);
        }
        
        public int InsertApplicationData(Entity.Application app) {
            return base.Channel.InsertApplicationData(app);
        }
        
        public int UpdateApplicationData(Entity.Application app) {
            return base.Channel.UpdateApplicationData(app);
        }
        
        public int DeleteApplicationData(int id) {
            return base.Channel.DeleteApplicationData(id);
        }
        
        public System.Collections.Generic.List<Entity.Module> GetAllModules() {
            return base.Channel.GetAllModules();
        }
        
        public System.Collections.Generic.List<Entity.Module> GetModulesByApplicationId(int appId) {
            return base.Channel.GetModulesByApplicationId(appId);
        }
        
        public Entity.Module GetModuleById(int id) {
            return base.Channel.GetModuleById(id);
        }
        
        public int InsertModuleData(Entity.Module module) {
            return base.Channel.InsertModuleData(module);
        }
        
        public int UpdateModuleData(Entity.Module module) {
            return base.Channel.UpdateModuleData(module);
        }
        
        public int DeleteModuleData(int id) {
            return base.Channel.DeleteModuleData(id);
        }
        
        public System.Collections.Generic.List<Entity.Dashboard> GetZoneWiseUserList() {
            return base.Channel.GetZoneWiseUserList();
        }
        
        public int InsertUserMenus(Entity.UserMenu userMenu, System.Collections.Generic.List<Entity.Menu> menuList) {
            return base.Channel.InsertUserMenus(userMenu, menuList);
        }
        
        public int UpdateUserMenus(Entity.UserMenu userMenu, System.Collections.Generic.List<Entity.Menu> menuList) {
            return base.Channel.UpdateUserMenus(userMenu, menuList);
        }
        
        public System.Collections.Generic.List<Entity.Menu> LoadUserMenuList(Entity.UserMenu userMenu) {
            return base.Channel.LoadUserMenuList(userMenu);
        }
        
        public System.Collections.Generic.List<Entity.UserMenu> GetAllUserMenuList(Entity.UserMenu item) {
            return base.Channel.GetAllUserMenuList(item);
        }
    }
}

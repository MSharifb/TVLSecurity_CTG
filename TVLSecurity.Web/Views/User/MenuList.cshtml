@model TVLSecurity.Web.Models.UserFormViewModel

<div class="clearfix" style="height:280px;overflow:auto">
    <ul id="roletree" onclick="tree();">
        <li>
            <input type="checkbox" name="" />
            <label class="treeheaderstyle">  Menus</label>

            @*@foreach (var item in Model.MenuModuleList)
                {
                    <ul>
                        <li>
                            <input type="checkbox" />

                            <label class="treeheaderstyle">@item.Text </label>*@

            <ul>
                @{int tempParentId = 0;}

                @for (int index = 0; index < Model.MenuList.Count; index++)
                {
                    if (Model.MenuList[index].ParentMenuId != -1 && Model.MenuList[index].ParentMenuId != 0)
                    {
                        tempParentId = Model.MenuList[index].ParentMenuId;

                        <li>
                            <input type="checkbox" />

                            <label class="treeheaderstyle">@Model.MenuList[index].ModuleName</label>
                            <ul>
                                <li>
                                    <input type="checkbox" />
                                    <label class="treeheaderstyle">@Model.MenuList[index].ParentMenuName </label>
                                    <ul>
                                        @{bool isChild = true;}
                                        @while (isChild)
                                                {
                                    <li>
                                        @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsAssignedMenu", Model.MenuList[index].IsAssignedMenu)
                                        <label class="treechildstyle">@Model.MenuList[index].MenuCaption </label>
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ModuleId", Model.MenuList[index].ModuleId)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuId", Model.MenuList[index].MenuId.ToString())
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuId", Model.MenuList[index].ParentMenuId)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuName", Model.MenuList[index].ParentMenuName)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuName", Model.MenuList[index].MenuName)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuCaption", Model.MenuList[index].MenuCaption)
                                        <ul>
                                            <li>
                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsAddAssigned", Model.MenuList[index].IsAddAssigned)
                                                <label class="treechildstyle">
                                                    Add
                                                </label>
                                            </li>
                                            <li>
                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsEditAssigned", Model.MenuList[index].IsEditAssigned)
                                                <label class="treechildstyle">
                                                    Edit
                                                </label>
                                            </li>
                                            <li>
                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsDeleteAssigned", Model.MenuList[index].IsDeleteAssigned)
                                                <label class="treechildstyle">
                                                    Delete
                                                </label>
                                            </li>
                                            <li>
                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsCancelAssigned", Model.MenuList[index].IsCancelAssigned)
                                                <label class="treechildstyle">
                                                    Cancel
                                                </label>
                                            </li>
                                            <li>
                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsPrintAssigned", Model.MenuList[index].IsPrintAssigned)
                                                <label class="treechildstyle">
                                                    Print
                                                </label>
                                            </li>
                                        </ul>
                                    </li>
                                                    index = index + 1;
                                                    if (index == Model.MenuList.Count)
                                                    {
                                                        isChild = false;
                                                    }
                                                    else if (tempParentId != Model.MenuList[index].ParentMenuId)
                                                    {
                                                        isChild = false; index = index - 1;
                                                    }
                                                }
                                    </ul>
                                </li>
                            </ul>
                        </li>
                                            }
                                            else
                                            {
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsAssignedMenu", Model.MenuList[index].IsAssignedMenu)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].ModuleId", Model.MenuList[index].ModuleId)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuId", Model.MenuList[index].MenuId.ToString())
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuId", Model.MenuList[index].ParentMenuId)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuName", Model.MenuList[index].ParentMenuName)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuName", Model.MenuList[index].MenuName)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuCaption", Model.MenuList[index].MenuCaption)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsAddAssigned", Model.MenuList[index].IsAddAssigned)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsEditAssigned", Model.MenuList[index].IsEditAssigned)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsDeleteAssigned", Model.MenuList[index].IsDeleteAssigned)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsCancelAssigned", Model.MenuList[index].IsCancelAssigned)
                                                @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsPrintAssigned", Model.MenuList[index].IsPrintAssigned)
                                                }
                                            }
            </ul>
            @*</li>
                </ul>
                                                    }*@
        </li>
        @*<li>
                <input type="checkbox" name="" />
                <label class="treeheaderstyle"> Rights</label>
                @if (Model.RightList != null)
                {
                    <ul>
                        @for (int index = 0; index < Model.RightList.Count; index++)
                        {
                            <li>
                                @Html.Hidden("Model.RightList[" + index.ToString() + "].RightName", Model.RightList[index].RightName)
                                @Html.Hidden("Model.RightList[" + index.ToString() + "].RightTitle", Model.RightList[index].RightTitle)
                                @Html.Hidden("Model.RightList[" + index.ToString() + "].RightId", Model.RightList[index].RightId)
                                @Html.CheckBox("Model.RightList[" + index.ToString() + "].IsAssignedRight", Model.RightList[index].IsAssignedRight)
                                <label class="treechildstyle">@Model.RightList[index].RightTitle </label>
                            </li>
                        }
                    </ul>
                }
            </li>*@
    </ul>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        $('ul#roletree').collapsibleCheckboxTree({
            checkParents: true,
            checkChildren: true,
            uncheckChildren: true,
            initialState: 'expand'
        });

    });

</script>

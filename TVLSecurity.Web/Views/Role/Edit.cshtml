@model TVLSecurity.Web.Models.RoleFormViewModel

@{
    Layout = null;
    ViewBag.Title = "Edit";
}



<script type="text/javascript">

    $(document).ready(function () {
        $('ul#roletree').collapsibleCheckboxTree({
            checkParents: true,
            checkChildren: false,
            uncheckChildren: true,
            initialState: 'expand'
        });

    });

    function PopulateModuleDropDown() {

        //        var selectedValue = $("#Model_Role_ApplicationId option:selected").val();
        //        $("#Model_SearchCraiteria_ApplicationId").val(selectedValue)

        var url = "/Security/Role/GetModuleList";
        var form = $("#frmRoleEdit");
        var serializedForm = form.serialize();

        $.post(url, serializedForm, function (result) {
            $("#Model_Role_ModuleId").fillSelect(result);
        }, "json");

        return false;
    }

    function tree() {
        $('input:checkbox').click(function () {
            if ($(this).prop('checked')) {
                // Check all child checkboxes
                //$(this).closest('li').find('input:checkbox').attr('checked', 'checked');
                $(this).closest('li').find('input:checkbox').prop('checked', true);
            }
            else {
                // Uncheck all child checkboxes
                //$(this).closest('li').find('input:checkbox').attr('checked', '');
                $(this).closest('li').find('input:checkbox').attr('checked', false);
            }
        });
    }

</script>


<form id="frmRoleEdit" method="post" action="">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">Role</h4>
    </div>
    <div class="modal-body">
        <div class="clearfix">
            @if (!Model.IsValidModel)
            {
                <div class="ui-corner-all divErrorMsg">
                    <strong>@Model.Message  </strong>
                </div>
            }
            else
            {
                <div class="ui-corner-all divMsg">
                    <strong>@Model.Message  </strong>
                </div>
            }
        </div>
        <div>
            <div class="col-sm-4">
                <div class="form-group">
                    <div>
                        <label>Role Name</label>
                        <span class="labelRequired">*</span>
                        @Html.Hidden("Model.Role.RoleId", Model.Role.RoleId)
                        @Html.TextBox("Model.Role.RoleName", Model.Role.RoleName, new { @class = "form-control", @maxlength = "50" })
                        @Html.ValidationMessage("Model.Role.RoleName")
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <label>Application</label>
                        <span class="labelRequired">*</span>
                        @Html.Hidden("Model.SearchCraiteria.ApplicationId", Model.SearchCraiteria.ApplicationId)
                        @Html.DropDownList("Model.Role.ApplicationId", Model.ApplicationList, "Select One", new { @class = "form-control", @onchange = "return PopulateModuleDropDown();" })
                        @Html.ValidationMessage("Model.Role.ApplicationId")
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label>Module</label>
                        <span class="labelRequired">*</span>
                        @Html.DropDownList("Model.Role.ModuleId", Model.ModuleList, "Select One", new { @class = "form-control", @onchange = "return SearchData('frmRoleCreate','/Security/Role/GetMenuList','MyDialog');" })
                        @Html.ValidationMessage("Model.Role.ModuleId")
                    </div>
                </div>

                <div class="form-group">
                    <div>
                        <label>Description</label>
                        @Html.TextArea("Model.Role.Description", new { @class = "form-control", @maxlength = 256, onkeyup = "return ismaxlengthPop(this)" })
                    </div>
                </div>
            </div>

            <div class="col-sm-8">
                <div class="divTreeView clearfix" style="height:400px;overflow:auto">
                    <ul id="roletree" onclick="tree();">
                        <li>
                            <input type="checkbox" name="" />
                            <label class="treeheaderstyle"> Menus</label>
                            <ul>
                                @for (int index = 0; index < Model.MenuList.Count; index++)
                                {
                                    if (Model.MenuList[index].ParentMenuId != -1 && Model.MenuList[index].ParentMenuId != 0)
                                    {
                                        int tempParentId = Model.MenuList[index].ParentMenuId;
                                        bool isChild = true;

                                        <li>
                                            <input type="checkbox" />
                                            <label class="treeheaderstyle">
                                                @Model.MenuList[index].ParentMenuName
                                            </label>
                                            <ul>
                                                @while (isChild)
                                                {
                                                    <li>
                                                        @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsAssignedMenu", Model.MenuList[index].IsAssignedMenu)
                                                        <label class="treechildstyle">
                                                            @Model.MenuList[index].MenuCaption
                                                        </label>
                                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuId", Model.MenuList[index].MenuId.ToString())
                                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuId", Model.MenuList[index].ParentMenuId)
                                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuName", Model.MenuList[index].ParentMenuName)
                                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuName", Model.MenuList[index].MenuName)
                                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuCaption", Model.MenuList[index].MenuCaption)
                                                        <ul>
                                                            <li>
                                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsAddAssigned", Model.MenuList[index].IsAddAssigned && Model.MenuList[index].IsAssignedMenu)
                                                                <label class="treechildstyle">
                                                                    Add
                                                                </label>
                                                            </li>
                                                            <li>
                                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsEditAssigned", Model.MenuList[index].IsEditAssigned && Model.MenuList[index].IsAssignedMenu)
                                                                <label class="treechildstyle">
                                                                    Edit
                                                                </label>
                                                            </li>
                                                            <li>
                                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsDeleteAssigned", Model.MenuList[index].IsDeleteAssigned && Model.MenuList[index].IsAssignedMenu)
                                                                <label class="treechildstyle">
                                                                    Delete
                                                                </label>
                                                            </li>
                                                            <li>
                                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsCancelAssigned", Model.MenuList[index].IsCancelAssigned && Model.MenuList[index].IsAssignedMenu)
                                                                <label class="treechildstyle">
                                                                    Cancel
                                                                </label>
                                                            </li>
                                                            <li>
                                                                @Html.CheckBox("Model.MenuList[" + index.ToString() + "].IsPrintAssigned", Model.MenuList[index].IsPrintAssigned && Model.MenuList[index].IsAssignedMenu)
                                                                <label class="treechildstyle">
                                                                    Print
                                                                </label>
                                                            </li>
                                                        </ul>
                                                    </li>
                                                    index = index + 1;
                                                    if (index == Model.MenuList.Count)
                                                    {
                                                        isChild = false;
                                                    }
                                                    else if (tempParentId != Model.MenuList[index].ParentMenuId)
                                                    {
                                                        isChild = false; index = index - 1;
                                                    }
                                                }
                                            </ul>
                                        </li>
                                    }
                                    else
                                    {
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsAssignedMenu", Model.MenuList[index].IsAssignedMenu)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuId", Model.MenuList[index].MenuId.ToString())
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuId", Model.MenuList[index].ParentMenuId)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].ParentMenuName", Model.MenuList[index].ParentMenuName)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuName", Model.MenuList[index].MenuName)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].MenuCaption", Model.MenuList[index].MenuCaption)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsAddAssigned", Model.MenuList[index].IsAddAssigned)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsEditAssigned", Model.MenuList[index].IsEditAssigned)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsDeleteAssigned", Model.MenuList[index].IsDeleteAssigned)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsCancelAssigned", Model.MenuList[index].IsCancelAssigned)
                                        @Html.Hidden("Model.MenuList[" + index.ToString() + "].IsPrintAssigned", Model.MenuList[index].IsPrintAssigned)
                                    }
                                }
                            </ul>
                        </li>
                        <li>
                            <input type="checkbox" name="" />
                            <label class="treeheaderstyle">Rights</label>
                            @if (Model.RightList != null)
                            {
                                <ul>
                                    @for (int index = 0; index < Model.RightList.Count; index++)
                                    {
                                        <li>
                                            @Html.Hidden("Model.RightList[" + index.ToString() + "].RightName", Model.RightList[index].RightName)
                                            @Html.Hidden("Model.RightList[" + index.ToString() + "].RightTitle", Model.RightList[index].RightTitle)
                                            @Html.Hidden("Model.RightList[" + index.ToString() + "].RightId", Model.RightList[index].RightId)
                                            @Html.CheckBox("Model.RightList[" + index.ToString() + "].IsAssignedRight", Model.RightList[index].IsAssignedRight)
                                            <label class="treechildstyle">
                                                @Model.RightList[index].RightTitle
                                            </label>
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="modal-footer">
        <button type="button" class="btn btn-warning" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-success" onclick="return SaveData('frmRoleEdit','/Security/Role/Edit','MyDialog');">Save changes</button>
    </div>
</form>

